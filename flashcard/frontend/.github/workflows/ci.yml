name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Build
      run: npm run build
    
    - name: Unit Tests
      run: npm test -- --coverage
    
    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
    
    - name: Install Cypress Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
    
    - name: Cypress Tests
      uses: cypress-io/github-action@v5
      with:
        working-directory: ./frontend
        build: npm run build
        start: npm run dev
        wait-on: 'http://localhost:5173'
        wait-on-timeout: 120
        browser: chrome
        record: false
    
    - name: Archive Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          frontend/coverage
          frontend/cypress/screenshots
          frontend/cypress/videos
        retention-days: 30

  coverage-check:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Download Coverage Results
      uses: actions/download-artifact@v3
      with:
        name: test-results
        path: frontend
    
    - name: Check Coverage Thresholds
      run: |
        npx istanbul check-coverage --statements 30 --branches 20 --functions 30 --lines 30
        
        # Check critical components coverage
        echo "Checking critical component coverage..."
        
        # StudySession.svelte (target: at least 30%)
        STUDY_SESSION_COVERAGE=$(grep -A 4 "StudySession.svelte" coverage/lcov-report/index.html | grep "%)" | awk -F'>' '{print $2}' | awk -F'%' '{print $1}')
        echo "StudySession.svelte coverage: $STUDY_SESSION_COVERAGE%"
        if (( $(echo "$STUDY_SESSION_COVERAGE < 30" | bc -l) )); then
          echo "StudySession.svelte coverage is below 30%"
          exit 1
        fi
        
        # FlashcardReview.svelte (target: at least 30%)
        FLASHCARD_REVIEW_COVERAGE=$(grep -A 4 "FlashcardReview.svelte" coverage/lcov-report/index.html | grep "%)" | awk -F'>' '{print $2}' | awk -F'%' '{print $1}')
        echo "FlashcardReview.svelte coverage: $FLASHCARD_REVIEW_COVERAGE%"
        if (( $(echo "$FLASHCARD_REVIEW_COVERAGE < 30" | bc -l) )); then
          echo "FlashcardReview.svelte coverage is below 30%"
          exit 1
        fi
        
        # Login.svelte (target: at least 30%)
        LOGIN_COVERAGE=$(grep -A 4 "Login.svelte" coverage/lcov-report/index.html | grep "%)" | awk -F'>' '{print $2}' | awk -F'%' '{print $1}')
        echo "Login.svelte coverage: $LOGIN_COVERAGE%"
        if (( $(echo "$LOGIN_COVERAGE < 30" | bc -l) )); then
          echo "Login.svelte coverage is below 30%"
          exit 1
        fi
